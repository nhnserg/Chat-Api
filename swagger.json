{
  "openapi": "3.0.1",
  "info": {
    "title": "Chat Application API",
    "version": "1.0.0",
    "description": "API documentation for the real-time chat application"
  },
  "consumes": ["application/json", "multipart/form-data"],
  "produces": ["application/json", "multipart/form-data"],
  "servers": [
    {
      "url": "https://chat-api-uf32.onrender.com",
      "description": "Development server"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authentication endpoints"
    },
    {
      "name": "Users",
      "description": "User management"
    },
    {
      "name": "Rooms",
      "description": "Chat rooms management"
    },
    {
      "name": "Messages",
      "description": "Messages management"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "summary": "Register a new user",
        "tags": ["Auth"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email", "password"],
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "user@example.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "secret123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered"
          },
          "409": {
            "description": "Email already in use"
          }
        }
      }
    },
    "/auth/verify/send": {
      "post": {
        "summary": "Send verification code to email",
        "tags": ["Auth"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email"],
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "user@example.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Verification code sent"
          },
          "400": {
            "description": "Email is required"
          },
          "409": {
            "description": "Email is already verified and in use"
          },
          "429": {
            "description": "Too many requests"
          }
        }
      }
    },
    "/auth/verify": {
      "post": {
        "summary": "Verify email with code",
        "tags": ["Auth"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email", "code"],
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "user@example.com"
                  },
                  "code": {
                    "type": "string",
                    "example": "123456"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Email verified successfully"
          },
          "400": {
            "description": "Code expired or invalid"
          },
          "404": {
            "description": "Verification code not found"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "Log in user",
        "tags": ["Auth"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email", "password"],
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "user@example.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "secret123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful login"
          },
          "401": {
            "description": "Email or password invalid"
          },
          "403": {
            "description": "Email not verified"
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "summary": "Refresh tokens",
        "tags": ["Auth"],
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Tokens refreshed"
          },
          "400": {
            "description": "Refresh token is required"
          },
          "403": {
            "description": "Invalid refresh token"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "summary": "Logout user",
        "tags": ["Auth"],
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "Logout successful"
          },
          "400": {
            "description": "Refresh token is required"
          }
        }
      }
    },
    "/users/current": {
      "get": {
        "summary": "Get current user",
        "tags": ["Users"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Returns current authenticated user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/update": {
      "put": {
        "summary": "Update user profile",
        "tags": ["Users"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/theme": {
      "put": {
        "summary": "Update user theme",
        "tags": ["Users"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["theme"],
                "properties": {
                  "theme": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Theme updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/password": {
      "put": {
        "summary": "Change password",
        "tags": ["Users"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["currentPassword", "newPassword"],
                "properties": {
                  "currentPassword": {
                    "type": "string"
                  },
                  "newPassword": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Password changed successfully"
          }
        }
      }
    },
    "/users/delete": {
      "delete": {
        "summary": "Delete user",
        "tags": ["Users"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["password"],
                "properties": {
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "User deleted successfully"
          }
        }
      }
    },
    "/rooms": {
      "get": {
        "summary": "Get all chat rooms",
        "tags": ["Rooms"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of all chat rooms",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ChatRoom"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new chat room",
        "tags": ["Rooms"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRoomInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Room created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChatRoom"
                }
              }
            }
          }
        }
      }
    },
    "/rooms/{roomId}": {
      "delete": {
        "summary": "Delete a chat room",
        "tags": ["Rooms"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "roomId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID of the room to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "Room deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChatRoom"
                }
              }
            }
          },
          "404": {
            "description": "Room not found"
          }
        }
      }
    },
    "/messages/room/{roomId}": {
      "get": {
        "summary": "Get latest messages from a room",
        "tags": ["Messages"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "roomId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the chat room"
          }
        ],
        "responses": {
          "200": {
            "description": "List of messages",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Message"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/messages/private": {
      "get": {
        "summary": "Get private messages for the authenticated user",
        "tags": ["Messages"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of private messages",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Message"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/messages/unread": {
      "get": {
        "summary": "Get count of unread private messages",
        "tags": ["Messages"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Count of unread messages",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "unreadCount": {
                      "type": "integer",
                      "example": 3
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/messages/{messageId}/read": {
      "patch": {
        "summary": "Mark a private message as read",
        "tags": ["Messages"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "messageId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the message to mark as read"
          }
        ],
        "responses": {
          "200": {
            "description": "Updated message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "404": {
            "description": "Message not found"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "cookieAuth": {
        "type": "apiKey",
        "in": "cookie",
        "name": "refreshToken"
      },
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "theme": {
            "type": "string"
          },
          "avatar_url": {
            "type": "string"
          },
          "tokenAccess": {
            "type": "string"
          }
        }
      },
      "UpdateUserInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "avatar": {
            "type": "string",
            "format": "binary"
          }
        }
      },
      "ChatRoom": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "topic": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CreateRoomInput": {
        "type": "object",
        "required": ["name", "topic"],
        "properties": {
          "name": {
            "type": "string"
          },
          "topic": {
            "type": "string"
          }
        }
      },
      "Message": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "senderId": {
            "type": "string"
          },
          "recipientId": {
            "type": "string"
          },
          "roomId": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "isRead": {
            "type": "boolean"
          }
        }
      }
    }
  }
}
